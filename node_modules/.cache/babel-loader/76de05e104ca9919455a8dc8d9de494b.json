{"ast":null,"code":"var _jsxFileName = \"D:\\\\Helena\\\\IT\\\\React\\\\ReactKurzComplete\\\\redux-projekt-1\\\\01-starting-project (2)\\\\01-starting-project\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Counter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\"; // pouzijeme hook useSelector, ktery nam umozni vybrat cast naseho storu\n// existuje i useStore, kterym primo ziskame cely nas store. ale je vic convenient pouzit useSelector,\n// a vybrat si jen cast storu, ktera nas zajima\n// useDispatch je dalsi hook. ten pouzijeme pro dispatchovani akci.\n\nimport { counterActions } from \"../store/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter); // tady si vybereme to, co chceme selectovat.\n\n  const show = useSelector(state => state.showCounter);\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(5)); // toolkit nam vytvori takovyhle objekt: {type: SOME_UNIQUE_IDENTIFIER, payload: 5}\n  }; // toggleCOunterHandler nam bude schovavat a zobrazovat nas counter.\n  // stejne jako meneni hodnoty counteru, tak i tahle fíčura, by sly delat jen zde v teto komponente.\n  // jde o local State. a taky by se to spravne melo delat jen v tehle komponennte. pomoci useState. ale tady se to ucime...\n\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Increase by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"a6W6bcAuHVADZPU2xn93xNQZltc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Counter;\nexport default Counter;\n/*\nBEZ TOOLKITU:\nimport classes from './Counter.module.css';\nimport {useSelector, useDispatch} from 'react-redux';\n// pouzijeme hook useSelector, ktery nam umozni vybrat cast naseho storu\n// existuje i useStore, kterym primo ziskame cely nas store. ale je vic convenient pouzit useSelector,\n// a vybrat si jen cast storu, ktera nas zajima\n// useDispatch je dalsi hook. ten pouzijeme pro dispatchovani akci.\n\nimport { counterActions } from '../store/index';\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter); // tady si vybereme to, co chceme selectovat.\n  const show = useSelector(state => state.showCounter);\n\n  const incrementHandler = () => {\n    dispatch({type: 'increment'})\n  }\n\n  const decrementHandler = () => {\n    dispatch({type:'decrement'})\n  }\n\n  const increaseHandler = () => {\n    dispatch({type: 'increase', value: 5})\n  }\n\n  // toggleCOunterHandler nam bude schovavat a zobrazovat nas counter.\n  // stejne jako meneni hodnoty counteru, tak i tahle fíčura, by sly delat jen zde v teto komponente.\n  // jde o local State. a taky by se to spravne melo delat jen v tehle komponennte. pomoci useState. ale tady se to ucime...\n  const toggleCounterHandler = () => {\n    dispatch({type: 'toggle'})\n  };\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["D:/Helena/IT/React/ReactKurzComplete/redux-projekt-1/01-starting-project (2)/01-starting-project/src/components/Counter.js"],"names":["classes","useSelector","useDispatch","counterActions","Counter","dispatch","counter","state","show","showCounter","incrementHandler","increment","decrementHandler","decrement","increaseHandler","increase","toggleCounterHandler","toggleCounter","value"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;AACA;AACA;AACA;;AAEA,SAASC,cAAT,QAA+B,gBAA/B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,OAAO,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACD,OAAlB,CAA3B,CAFoB,CAEmC;;AACvD,QAAME,IAAI,GAAGP,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACE,WAAlB,CAAxB;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BL,IAAAA,QAAQ,CAACF,cAAc,CAACQ,SAAf,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BP,IAAAA,QAAQ,CAACF,cAAc,CAACU,SAAf,EAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAG,MAAM;AAC5BT,IAAAA,QAAQ,CAACF,cAAc,CAACY,QAAf,CAAwB,CAAxB,CAAD,CAAR,CAD4B,CACU;AACvC,GAFD,CAboB,CAiBpB;AACA;AACA;;;AACA,QAAMC,oBAAoB,GAAG,MAAM;AACjCX,IAAAA,QAAQ,CAACF,cAAc,CAACc,aAAf,EAAD,CAAR;AACD,GAFD;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAEjB,OAAO,CAACM,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,IAAI,iBAAI;AAAK,MAAA,SAAS,EAAER,OAAO,CAACkB,KAAxB;AAAA,gBAAgCZ;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFX,eAGE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEI,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEI,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAEF,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAQ,MAAA,OAAO,EAAEI,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CApCD;;GAAMZ,O;UACaF,W,EACDD,W,EACHA,W;;;KAHTG,O;AAsCN,eAAeA,OAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import classes from \"./Counter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// pouzijeme hook useSelector, ktery nam umozni vybrat cast naseho storu\n// existuje i useStore, kterym primo ziskame cely nas store. ale je vic convenient pouzit useSelector,\n// a vybrat si jen cast storu, ktera nas zajima\n// useDispatch je dalsi hook. ten pouzijeme pro dispatchovani akci.\n\nimport { counterActions } from \"../store/index\";\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector((state) => state.counter); // tady si vybereme to, co chceme selectovat.\n  const show = useSelector((state) => state.showCounter);\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(5)); // toolkit nam vytvori takovyhle objekt: {type: SOME_UNIQUE_IDENTIFIER, payload: 5}\n  };\n\n  // toggleCOunterHandler nam bude schovavat a zobrazovat nas counter.\n  // stejne jako meneni hodnoty counteru, tak i tahle fíčura, by sly delat jen zde v teto komponente.\n  // jde o local State. a taky by se to spravne melo delat jen v tehle komponennte. pomoci useState. ale tady se to ucime...\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {show && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increase by 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n\n/*\nBEZ TOOLKITU:\nimport classes from './Counter.module.css';\nimport {useSelector, useDispatch} from 'react-redux';\n// pouzijeme hook useSelector, ktery nam umozni vybrat cast naseho storu\n// existuje i useStore, kterym primo ziskame cely nas store. ale je vic convenient pouzit useSelector,\n// a vybrat si jen cast storu, ktera nas zajima\n// useDispatch je dalsi hook. ten pouzijeme pro dispatchovani akci.\n\nimport { counterActions } from '../store/index';\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter); // tady si vybereme to, co chceme selectovat.\n  const show = useSelector(state => state.showCounter);\n\n  const incrementHandler = () => {\n    dispatch({type: 'increment'})\n  }\n\n  const decrementHandler = () => {\n    dispatch({type:'decrement'})\n  }\n\n  const increaseHandler = () => {\n    dispatch({type: 'increase', value: 5})\n  }\n\n  // toggleCOunterHandler nam bude schovavat a zobrazovat nas counter.\n  // stejne jako meneni hodnoty counteru, tak i tahle fíčura, by sly delat jen zde v teto komponente.\n  // jde o local State. a taky by se to spravne melo delat jen v tehle komponennte. pomoci useState. ale tady se to ucime...\n  const toggleCounterHandler = () => {\n    dispatch({type: 'toggle'})\n  };\n*/\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Helena\\\\IT\\\\React\\\\ReactKurzComplete\\\\redux-projekt-1\\\\01-starting-project (2)\\\\01-starting-project\\\\src\\\\components\\\\Counter.js\",\n    _s = $RefreshSig$();\n\nimport classes from './Counter.module.css';\nimport { useSelector, useDispatch } from 'react-redux'; // pouzijeme hook useSelector, ktery nam umozni vybrat cast naseho storu\n// existuje i useStore, kterym primo ziskame cely nas store. ale je vic convenient pouzit useSelector,\n// a vybrat si jen cast storu, ktera nas zajima\n// useDispatch je dalsi hook. ten pouzijeme pro dispatchovani akci.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter); // tady si vybereme to, co chceme selectovat.\n\n  const incrementHandler = () => {\n    dispatch({\n      type: 'increment'\n    });\n  };\n\n  const decrementHandler = () => {\n    dispatch({\n      type: 'decrement'\n    });\n  };\n\n  const increaseHandler = () => {\n    dispatch({\n      type: 'increase',\n      value: 5\n    });\n  };\n\n  const toggleCounterHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Increase by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"gthwM6sqboLtlTmr2wLRFX51eJQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["D:/Helena/IT/React/ReactKurzComplete/redux-projekt-1/01-starting-project (2)/01-starting-project/src/components/Counter.js"],"names":["classes","useSelector","useDispatch","Counter","dispatch","counter","state","incrementHandler","type","decrementHandler","increaseHandler","value","toggleCounterHandler"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC,C,CACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,QAAMG,OAAO,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B,CAFoB,CAEiC;;AAErD,QAAME,gBAAgB,GAAG,MAAM;AAC7BH,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BL,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAR;AACD,GAFD;;AAIA,QAAME,eAAe,GAAG,MAAM;AAC5BN,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAE,UAAP;AAAmBG,MAAAA,KAAK,EAAE;AAA1B,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAG,MAAM,CAAE,CAArC;;AAEA,sBACE;AAAM,IAAA,SAAS,EAAEZ,OAAO,CAACK,OAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACW,KAAxB;AAAA,gBAAgCN;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEE,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAED,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AAAQ,MAAA,OAAO,EAAEG,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA9BD;;GAAMT,O;UACaD,W,EACDD,W;;;KAFZE,O;AAgCN,eAAeA,OAAf","sourcesContent":["import classes from './Counter.module.css';\nimport {useSelector, useDispatch} from 'react-redux';\n// pouzijeme hook useSelector, ktery nam umozni vybrat cast naseho storu\n// existuje i useStore, kterym primo ziskame cely nas store. ale je vic convenient pouzit useSelector,\n// a vybrat si jen cast storu, ktera nas zajima\n\n// useDispatch je dalsi hook. ten pouzijeme pro dispatchovani akci.\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.counter); // tady si vybereme to, co chceme selectovat.\n\n  const incrementHandler = () => {\n    dispatch({type: 'increment'})\n  }\n\n  const decrementHandler = () => {\n    dispatch({type:'decrement'})\n  }\n\n  const increaseHandler = () => {\n    dispatch({type: 'increase', value: 5})\n  }\n\n  const toggleCounterHandler = () => {};\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>{counter}</div>\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increase by 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}
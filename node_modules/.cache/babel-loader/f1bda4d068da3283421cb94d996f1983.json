{"ast":null,"code":"const redux = require(\"redux\");\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1\n    };\n  }\n\n  return state;\n};\n\nconst store = redux.createStore(counterReducer);\nstore.dispatch({\n  type: \"increment\"\n});\nstore.dispatch({\n  type: \"decrement\"\n});\n\nconst counterSubscriber = () => {\n  const latestState = store.getState();\n  console.log(latestState);\n};\n\nstore.subscribe(counterSubscriber);","map":{"version":3,"sources":["D:/Helena/IT/React/ReactKurzComplete/redux-projekt-1/01-starting-project (2)/01-starting-project/src/store/index.js"],"names":["redux","require","counterReducer","state","counter","action","type","store","createStore","dispatch","counterSubscriber","latestState","getState","console","log","subscribe"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,cAAc,GAAG,YAAoC;AAAA,MAAnCC,KAAmC,uEAA3B;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAA2B;AAAA,MAAXC,MAAW;;AACzD,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLF,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB;AADpB,KAAP;AAGD;;AAED,MAAIC,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLF,MAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB;AADpB,KAAP;AAGD;;AACD,SAAOD,KAAP;AACD,CAbD;;AAeA,MAAMI,KAAK,GAAGP,KAAK,CAACQ,WAAN,CAAkBN,cAAlB,CAAd;AAEAK,KAAK,CAACE,QAAN,CAAe;AAAEH,EAAAA,IAAI,EAAE;AAAR,CAAf;AACAC,KAAK,CAACE,QAAN,CAAe;AAAEH,EAAAA,IAAI,EAAE;AAAR,CAAf;;AAEA,MAAMI,iBAAiB,GAAG,MAAM;AAC5B,QAAMC,WAAW,GAAGJ,KAAK,CAACK,QAAN,EAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACH,CAHD;;AAIAJ,KAAK,CAACQ,SAAN,CAAgBL,iBAAhB","sourcesContent":["const redux = require(\"redux\");\r\n\r\nconst counterReducer = (state = { counter: 0 }, action) => {\r\n  if (action.type === \"increment\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst store = redux.createStore(counterReducer);\r\n\r\nstore.dispatch({ type: \"increment\" });\r\nstore.dispatch({ type: \"decrement\" });\r\n\r\nconst counterSubscriber = () => {\r\n    const latestState = store.getState();\r\n    console.log(latestState)\r\n}\r\nstore.subscribe(counterSubscriber)\r\n"]},"metadata":{},"sourceType":"module"}